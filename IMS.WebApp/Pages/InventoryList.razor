@page "/inventories"
@inject NavigationManager _navigation
@inject IViewInventoriesByNameUseCase _viewInventories

<h3>Inventory List</h3>
<br />

<ViewInventoriesComponent OnSearchInventories="SearchInventories"></ViewInventoriesComponent>

@if(Inventories != null && Inventories.Count > 0)
{
    <div class="mb-2">
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach(var inv in Inventories)
            {
                <tr>
                    <td>@inv.InventoryName</td>
                    <td>@inv.Quantity</td>
                    <td>@inv.Price.ToString("c")</td>
                    <td>
                        <button type="button" class="btn btn-secondary">Edit</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    </div>
}
<button type="button" class="btn btn-primary" @onclick="AddInventory">Add Inventory</button>



@code {
    private List<Inventory> Inventories { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var invs = await _viewInventories.ExecuteAsync();
        Inventories = invs.ToList();
    }

    private void SearchInventories(List<Inventory> inventories)
    {
        Inventories = inventories;

    }

    private void AddInventory()
    {
        _navigation.NavigateTo("/addinventory");
    }



}
