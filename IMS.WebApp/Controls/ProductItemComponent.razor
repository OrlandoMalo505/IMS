@inject NavigationManager _navigation
@inject IDeleteProductUseCase _deleteProduct

@if(Product != null)
{
<tr>
   <td>@Product.ProductName</td>
   <td>@Product.Quantity</td>
   <td>@Product.Price.ToString("c")</td>
   <td>
   <button type="button" class="btn btn-secondary" @onclick="@( () => EditProduct(@Product.ProductId) )">Edit</button>
   <button type="button" class="btn btn-danger" @onclick="@( async () => await DeleteProduct(Product))">Delete</button>
   </td>
 </tr>
}

@code {
    [Parameter]
    public Product Product { get; set; }

    [Parameter]
    public EventCallback OnProductDeleted { get; set; }

    private void EditProduct(int id)
    {
        _navigation.NavigateTo($"/editproduct/{id}");
    }


    private async Task DeleteProduct(Product product)
    {
        await _deleteProduct.ExecuteAsync(product.ProductId);
        await OnProductDeleted.InvokeAsync();
        _navigation.NavigateTo("/products");
    }
}
